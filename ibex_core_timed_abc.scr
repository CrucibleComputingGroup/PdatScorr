# ABC script for sequential optimization with timing constraints
read_aiger design_pre_abc.aig
print_stats

# Structural hashing
strash
print_stats

# Detect and merge sequential equivalences
# -c: use constraints (timing assumptions)
# -F 3: k-induction depth (should match max latency)
# -C 10000: conflict limit
# -v: verbose output

# Run scorr with constraints enabled
cycle 100
scorr -c -F 3 -C 10000 -v

print_stats

# Additional optimizations
dc2
dretime
print_stats

# Write optimized design
write_aiger design_post_abc.aig
quit
