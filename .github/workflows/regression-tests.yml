name: Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

env:
  # Cache key version - increment to invalidate caches
  CACHE_VERSION: v1

jobs:
  test:
    name: Run Regression Tests
    runs-on: self-hosted
    timeout-minutes: 45

    steps:
    - name: Checkout PdatScorr
      uses: actions/checkout@v4
      with:
        path: PdatScorr

    - name: Checkout PdatRiscvDsl
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/PdatRiscvDsl
        path: PdatRiscvDsl

    - name: Checkout PdatCoreSim (for Ibex core)
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/PdatCoreSim
        path: PdatCoreSim
        submodules: recursive  # Important: pulls Ibex core submodule

    - name: Install Python dependencies
      run: |
        cd PdatScorr
        pip3 install --upgrade pip
        pip3 install -r requirements.txt

    - name: Set IBEX_ROOT environment variable
      run: |
        echo "IBEX_ROOT=$GITHUB_WORKSPACE/PdatCoreSim/cores/ibex" >> $GITHUB_ENV

    - name: Verify dependencies
      run: |
        echo "=== Tool Versions ==="
        python3 --version
        synlig --version || echo "WARNING: synlig not found in PATH"
        abc --version || echo "WARNING: abc not found in PATH"
        pdat-dsl --help | head -5 || echo "WARNING: pdat-dsl not installed"
        echo ""
        echo "=== Ibex Core ==="
        if [ -d "$IBEX_ROOT" ]; then
          echo "✓ Ibex core found at $IBEX_ROOT"
        else
          echo "✗ Ibex core not found at $IBEX_ROOT"
          exit 1
        fi
        echo "====================="

    - name: Run regression tests
      run: |
        cd PdatScorr/tests/regression
        # Run pytest directly without xdist parallelism
        # to avoid Synlig/Surelog double-free issues
        pytest -v --maxfail=5
      timeout-minutes: 30

    - name: Generate test summary
      if: always()
      run: |
        cd PdatScorr/tests
        echo "## Regression Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ -f regression/.pytest_cache/v/cache/lastfailed ]; then
          echo "### ❌ Failed Tests" >> $GITHUB_STEP_SUMMARY
          cat regression/.pytest_cache/v/cache/lastfailed >> $GITHUB_STEP_SUMMARY
        else
          echo "### ✅ All Tests Passed" >> $GITHUB_STEP_SUMMARY
        fi
